From 8f7d74fbf7fa086e12d8b6eb6f580f57d50981d1 Mon Sep 17 00:00:00 2001
From: Root <root@nimbus.for-no-reason.net>
Date: Fri, 29 Apr 2016 03:05:02 +0000
Subject: [PATCH] gentoo-systemwide-config-patch

---
 include/znc/znc.h |  2 ++
 src/main.cpp      | 42 ++++++++++++++++++++++++++++++++++++++++--
 src/znc.cpp       | 11 ++++++++++-
 3 files changed, 52 insertions(+), 3 deletions(-)

diff --git a/include/znc/znc.h b/include/znc/znc.h
index ff31291..81db81d 100644
--- a/include/znc/znc.h
+++ b/include/znc/znc.h
@@ -249,6 +249,7 @@ class CZNC {
     void DisableConfigTimer();
 
     static void DumpConfig(const CConfig* Config);
+    void SetSystemWideConfig(bool systemWideConfig);
 
   private:
     CFile* InitPidFile();
@@ -304,6 +305,7 @@ class CZNC {
     unsigned int m_uiForceEncoding;
     TCacheMap<CString> m_sConnectThrottle;
     bool m_bProtectWebSessions;
+    bool m_bSystemWideConfig;
     bool m_bHideVersion;
     CTranslationDomainRefHolder m_Translation;
     unsigned int m_uiConfigWriteDelay;
diff --git a/src/main.cpp b/src/main.cpp
index f6bf0a7..868c7ef 100644
--- a/src/main.cpp
+++ b/src/main.cpp
@@ -16,6 +16,9 @@
 
 #include <znc/znc.h>
 #include <signal.h>
+#include <sys/types.h>
+#include <pwd.h>
+#include <grp.h>
 #include <time.h>
 #include <thread>
 
@@ -114,6 +117,7 @@ static const struct option g_LongOpts[] = {
     {"makepass", no_argument, nullptr, 's'},
     {"makepem", no_argument, nullptr, 'p'},
     {"datadir", required_argument, nullptr, 'd'},
+    {"system-wide-config-as", required_argument, 0, 'S'},
     {nullptr, 0, nullptr, 0}};
 
 static void GenerateHelp(const char* appname) {
@@ -282,6 +286,8 @@ int main(int argc, char** argv) {
     bool bMakeConf = false;
     bool bMakePass = false;
     bool bAllowRoot = false;
+    bool bSystemWideConfig = false;
+    CString sSystemWideConfigUser = "znc";
     bool bForeground = false;
 #ifdef ALWAYS_RUN_IN_FOREGROUND
     bForeground = true;
@@ -289,9 +295,36 @@ int main(int argc, char** argv) {
 #ifdef HAVE_LIBSSL
     bool bMakePem = false;
 #endif
+
+    if (bSystemWideConfig && getuid() == 0) {
+        struct passwd *pwd;
+
+        pwd = getpwnam(sSystemWideConfigUser.c_str());
+        if (pwd == NULL) {
+            CUtils::PrintError("Daemon user not found.");
+            return 1;
+        }
+        if ((long) pwd->pw_uid == 0) {
+            CUtils::PrintError("Please define a daemon user other than root.");
+            return 1;
+        }
+        if (setgroups(0, NULL) != 0) {
+            CUtils::PrintError("setgroups: Unable to clear supplementary group IDs");
+            return 1;
+        }
+        if (setgid((long) pwd->pw_gid) != 0) {
+            CUtils::PrintError("setgid: Unable to drop group privileges");
+            return 1;
+        }
+        if (setuid((long) pwd->pw_uid) != 0) {
+            CUtils::PrintError("setuid: Unable to drop user privileges");
+            return 1;
+        }
+    }
+
     CZNC::CreateInstance();
 
-    while ((iArg = getopt_long(argc, argv, "hvnrcspd:Df", g_LongOpts,
+    while ((iArg = getopt_long(argc, argv, "hvnrcspd:DfS", g_LongOpts,
                                &iOptIndex)) != -1) {
         switch (iArg) {
             case 'h':
@@ -313,6 +346,10 @@ int main(int argc, char** argv) {
             case 's':
                 bMakePass = true;
                 break;
+            case 'S':
+                bSystemWideConfig = true;
+                sSystemWideConfigUser = optarg;
+                break;
             case 'p':
 #ifdef HAVE_LIBSSL
                 bMakePem = true;
@@ -350,6 +387,7 @@ int main(int argc, char** argv) {
 
     CZNC* pZNC = &CZNC::Get();
     pZNC->InitDirs(((argc) ? argv[0] : ""), sDataDir);
+    pZNC->SetSystemWideConfig(bSystemWideConfig);
 
 #ifdef HAVE_LIBSSL
     if (bMakePem) {
@@ -410,7 +448,7 @@ int main(int argc, char** argv) {
         CUtils::PrintStatus(true, "");
     }
 
-    if (isRoot()) {
+    if (isRoot() && !bSystemWideConfig) {
         CUtils::PrintError(
             "You are running ZNC as root! Don't do that! There are not many "
             "valid");
diff --git a/src/znc.cpp b/src/znc.cpp
index ab103ff..f10df9a 100644
--- a/src/znc.cpp
+++ b/src/znc.cpp
@@ -75,6 +75,7 @@ CZNC::CZNC()
       m_uiForceEncoding(0),
       m_sConnectThrottle(),
       m_bProtectWebSessions(true),
+      m_bSystemWideConfig(false),
       m_bHideVersion(false),
       m_Translation("znc"),
       m_uiConfigWriteDelay(0),
@@ -1001,7 +1002,7 @@ bool CZNC::WriteNewConfig(const CString& sConfigFile) {
         // installed.
         // See https://github.com/znc/znc/pull/257
         char* szNoLaunch = getenv("ZNC_NO_LAUNCH_AFTER_MAKECONF");
-        if (szNoLaunch && *szNoLaunch == '1') {
+        if (!m_bSystemWideConfig && szNoLaunch && *szNoLaunch == '1') {
             bWantLaunch = false;
         }
     }
@@ -2156,9 +2157,13 @@ void CZNC::LeakConnectQueueTimer(CConnectQueueTimer* pTimer) {
 
 bool CZNC::WaitForChildLock() { return m_pLockFile && m_pLockFile->ExLock(); }
 
+void CZNC::SetSystemWideConfig(bool systemWideConfig) {
+    m_bSystemWideConfig = systemWideConfig;
+}
+
 void CZNC::DisableConfigTimer() {
     if (m_pConfigTimer) {
         m_pConfigTimer->Stop();
         m_pConfigTimer = nullptr;
     }
 }
-- 
2.8.1

